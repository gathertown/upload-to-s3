version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.1.0
  docker: circleci/docker@1.7.0
  k8s: digitalocean/k8s@0.1.1
  kubernetes: circleci/kubernetes@1.3.0
  kuz: finc/kustomize@0.0.1

commands:
  deploy:
    description: "deliver application to kubernetes cluster"
    parameters:
      image:
        type: string
        default: "gathertown/upload-to-s3"
      cluster:
        type: string
        default: abcd
    steps:
      - checkout
      - kubernetes/install-kubectl
      - kuz/install:
          version: "v4.4.0"
      - k8s/install
      - k8s/initialize:
          cluster: << parameters.cluster >>
      - run:
          command: |
            cd deployments/overlays/cluster
            kustomize edit set image << parameters.image >>:${CIRCLE_SHA1:0:9}
            kustomize build .
            kustomize build . | kubectl apply -f -
  build-and-push:
    description: "build and push docker image to registry"
    parameters:
      image:
        type: string
        default: "gathertown/upload-to-s3"
      dockerfile:
        type: string
        default: "Dockerfile"
    steps:
      - checkout
      - docker/build:
          dockerfile: <<parameters.dockerfile>>
          image: <<parameters.image>>
          tag: ${CIRCLE_SHA1:0:9}
      - docker/check
      - docker/push:
          image: <<parameters.image>>
          tag: ${CIRCLE_SHA1:0:9}

jobs:
  build-and-push:
    parameters:
      image:
        type: string
        default: "gathertown/upload-to-s3"
      dockerfile:
        type: string
        default: "Dockerfile"
    executor: docker/docker
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - build-and-push:
          dockerfile: <<parameters.dockerfile>>
          image: <<parameters.image>>
  deploy:
    parameters:
      cluster:
        type: string
    executor: docker/docker
    steps:
      - setup_remote_docker:
          version: 20.10.7
      - deploy:
          cluster: <<parameters.cluster>>

workflows:
  build-and-push:
    jobs:
      - build-and-push:
          dockerfile: Dockerfile
          filters:
            branches:
              only:
                - develop
                - staging
                - main

      # development cluster
      - deploy:
          name: development
          requires:
            - build-and-push
          cluster: $K8S_DEV_NYC1
          filters:
            branches:
              only:
                - develop

      # staging clusters
      - deploy: &deploy-staging
          name: staging-do-nyc3-a
          requires:
            - build-and-push
          cluster: $K8S_STG_NYC3_A
          filters:
            branches:
              only:
                - staging
      - deploy:
          <<: *deploy-staging
          name: staging-do-fra1-a
          cluster: $K8S_STG_FRA1_A

      # production clusters
      - deploy: &deploy-production
          name: production-do-blr1-a
          requires:
            - build-and-push
          cluster: $K8S_PROD_BLR1_A
          filters:
            branches:
              only:
                - main
      - deploy:
          <<: *deploy-production
          name: production-do-fra1-a
          cluster: $K8S_PROD_FRA1_A

      - deploy:
          <<: *deploy-production
          name: production-do-fra1-b
          cluster: $K8S_PROD_FRA1_B

      - deploy:
          <<: *deploy-production
          name: production-do-sgp1-a
          cluster: $K8S_PROD_SGP1_A

      - deploy:
          <<: *deploy-production
          name: production-do-sgp1-b
          cluster: $K8S_PROD_SGP1_B

      - deploy:
          <<: *deploy-production
          name: production-do-sfo3-a
          cluster: $K8S_PROD_SFO3_A

      - deploy:
          <<: *deploy-production
          name: production-do-sfo3-b
          cluster: $K8S_PROD_SFO3_B

      - deploy:
          <<: *deploy-production
          name: production-do-nyc3-a
          cluster: $K8S_PROD_NYC3_A

      - deploy:
          <<: *deploy-production
          name: production-do-nyc3-b
          cluster: $K8S_PROD_NYC3_B

      - deploy:
          <<: *deploy-production
          name: production-do-nyc3-c
          cluster: $K8S_PROD_NYC3_C
